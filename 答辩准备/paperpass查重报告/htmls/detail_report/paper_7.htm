<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>

<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_6.htm">上一页</a>
<a class="pagelink" href="paper_8.htm">下一页</a>
<a class="pagelink" href="paper_11.htm">尾页</a>
页码：7/11页
]
</div>

<br><div style="margin-left:25px">

<img src="../../images/guanwang.gif"></div><br><br>
<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">223</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 3.5:</span><a href='../sentence_detail/594.htm' target='right' class='red' >不同推荐算法在命中率上的表现</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">224</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/595.htm' target='right' class='orange' >图3.6展示了随着推荐列表长度增加，不同推荐算法的推荐准确率变化情况。</a><a href='../sentence_detail/596.htm' target='right' class='orange' >从图中可以非常直观地看出，虽然随着推荐列表长度的增加，所给几种推荐算法的准确率都有所下降，</a><span class='green'>但本文所给出的基于多维时间序列分析的音乐推荐算法能够取得最好的推荐准确率。</span><span class='green'>需要说明的是，随着推荐列表长度的增加，各算法推荐准确率取值比较低且持续下降是可以从准确率的定义中推导出来的。</span><span class='green'>假设用户数目为100，推荐列表长度为50，推荐算法的命中率为60%即命中数为60，那么此时的推荐准确度为0.012。</span><span class='green'>当推荐列表长度增加到100时，假设推荐算法的命中率提升到80%即命中数为80，那么此时的推荐准确率只有0.008。</span><span class='green'>简单来说，对于音乐推荐来说，准确率定义中的分子变化很小且取值也很小但分母却增长地比较快，</span><a href='../sentence_detail/602.htm' target='right' class='orange' >所以导致了推荐准确率取值很小且随着推荐列表长度增加，准确率不断下降。</a><span class='green'>因此，预测准确率偏低以及随着推荐列表增加而降低是可以解释的，而我们关注地不是其绝对取值，更大的意义上我们关注不同推荐算法获得的推荐准确率之间的相对效果。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">225</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 3.6:</span><a href='../sentence_detail/605.htm' target='right' class='red' >不同推荐算法在准确率上的表现</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">226</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>为了更为直观地考察本文所提方法在推荐准确率指标上的提升效果，我们下面使用相对指标进行评测。</span><span class='green'>考虑到基于用户的最近邻算法( UserKNN)在同类工作中得到的关注最多而 F1值是衡量不同推荐算法效果的综合指标，</span><span class='green'>本文考察基于多维时间序列分析的音乐推荐方法相较于 UserKNN在推荐 F1值上的提升效果(倍数)，</span><span class='green'>如图3.7所示。</span><a href='../sentence_detail/610.htm' target='right' class='orange' >其中，横坐标表示被推荐歌曲的数目，纵坐标表示算法推荐 F1值的提升倍数。</a><span class='green'>如果纵坐标取值大于零，表明本文所述方法的推荐F1值相较于 UserKNN算法有所提升；</span><span class='green'>如果纵坐标取值为零，表明效果没有提升；</span><span class='green'>如果纵坐标取值小于零，表明本文所述方法不但没有提高推荐 F1值而且还有所下降。</span><span class='green'>由图 3.7可以看出，无论被推荐歌曲数目为何值，纵坐标取值总是大于零，说明本文所述方法能够提升推荐的 F1值且提升幅度在 80%以上。</span><a href='../sentence_detail/615.htm' target='right' class='orange' >随着推荐列表长度的增长，提升的幅度也继续增长 (可达140%)。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">227</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图3.8和3.9展示了随着推荐列表长度的增加，几种不同的音乐推荐算法的均方根误差(</span><a href='../sentence_detail/617.htm' target='right' class='orange' >如图3.8所示)和平均绝对误差(如图3.9所示)的变化趋势。</a><a href='../sentence_detail/618.htm' target='right' class='orange' >其中，横坐标表示被推荐歌曲的数目，纵坐标表示不同推荐算法的误差。</a><a href='../sentence_detail/619.htm' target='right' class='orange' >由图可以直观地看出，本文所提方法的推荐误差较之其他几种算法都比较小。</a><span class='green'>随着推荐列表长度的增加，列表中无效的歌曲增多，使得推荐误差有所上升，但这种上升幅度</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">228</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 3.7:</span><span class='green'>本文方法相对于UserKNN在F1-Score指标上的提升也是是非常小的。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">229</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 3.8:</span><a href='../sentence_detail/624.htm' target='right' class='orange' >不同推荐算法在均方根误差上的表现</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">230</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>综合以上实验结果可以看出，无论是从命中率/准确率的角度去考察算法的优劣，还是从预测误差的角度去考察算法的优劣，</span><span class='green'>本文所述的基于多维时间序列分析的音乐推荐算法都能够取得比参考算法较好的效果。</span><span class='green'>这验证了本文所提方法的合理性，说明将用户行为建模为一个多维时间序列进行分析能够全面细致地实现对用户行为的刻画进而提升推荐效果。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">231</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 3.9:</span><a href='../sentence_detail/629.htm' target='right' class='red' >不同推荐算法在绝对误差上的表现</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">232</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第四章 基于用户长期行为、中期行为和即时行为的综合音乐推荐方法</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">233</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/631.htm' target='right' class='orange' >由前文可知，基于多维时间序列分析的个性化音乐推荐方法与一些参考推荐方法相比能够取得比较好的推荐效果，</a><span class='green'>这包括较高的推荐命中率和较低的预测误差两方面的含义。</span><span class='green'>但是，朴素的多维时间序列分析音乐推荐方法还存在以下问题：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">234</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.考察片面。</span><span class='green'>该方法主要是通过对用户当前会话期内的行为序列进行分析来预测用户接下来的行为，</span><span class='green'>显然其只考虑了用户中期行为对用户未来行为的作用却忽视了用户长期行为以及用户即时行为的影响，</span><span class='green'>这与用户的未来行为受到其长期行为、中期行为和即时行为共同作用的直觉不相符。</span><span class='green'>2.冷启动问题。</span><span class='green'>该方法顺利工作的前提是用户已经产生了一些行为，即用户</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">235</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>已经在当前会话期内收听了一定数量的歌曲。</span><span class='green'>也就是说，朴素的基于多维时间序列分析的音乐推荐方法适合在用户状态稳定时为用户做出合理的推荐。</span><span class='green'>但是，对于刚进入给定平台的用户，朴素方法的推荐效果就要大打折扣，这是因为用户刚进入给定平台时所产生的行为很少，</span><span class='green'>而对应的听歌序列还不足以被朴素的多维时序方法进行分析和预测。</span><span class='green'>为了解决上述两个问题，我们将在本章中给出一种基于用户长期、中期和即时行为的综合音乐推荐方法并通过实验验证综合推荐的效果。</span><span class='green'>最后，本文对综合音乐推荐中的一些基本问题进行讨论分析，比如会话期长度的选择和文本分析方法的选取等。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">236</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.1 综合音乐推荐</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">237</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/647.htm' target='right' class='orange' >为了综合考虑用户长期、中期和即时行为对用户未来行为的影响和作用，</a><span class='green'>本文从基于用户长期行为的音乐推荐、基于用户中期行为的音乐推荐以及基于用户即时行为的音乐推荐中各选择一种算法进行综合，</span><a href='../sentence_detail/649.htm' target='right' class='orange' >试图通过这种综合全面考察用户行为的时间相关性。</a><span class='green'>至于如何对不同的算法进行综合，有很多策略可以进行选择。</span><span class='green'>Burke的分类方法 [8]区分出了七种不同的综合策略，而从更综合的角度来看这七种策略可以概括为三种基本设计思想：</span><a href='../sentence_detail/652.htm' target='right' class='orange' >整体式综合设计、并行式综合设计和流水线式综合设计。</a><span class='green'>其中，整体式综合设计实际上是一种推荐算法，其在推荐内部对不同推荐策略获取的特征进行综合，然后基于此生成最终的推荐列表；</span><span class='green'>并行式综合设计和流水线式综合设计都需要至少实现两个不同的推荐算法，其中并行式综合设计将不同推荐算法获取的最终推荐结果加以综合，</span><span class='green'>而流水线式综合则将推荐分为不同的阶段然后在不同的阶段使用不同的推荐策略进行推荐并最终得到推荐结果。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">238</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>显然，本文所述的音乐推荐不具有明确的阶段划分，因此使用流水线式的综合设计不太合适，</span><span class='green'>而整体式综合设计和并行式综合设计均可应用，只是二者综合的阶段不一致。</span><span class='green'>由于整体式的综合设计思路是从内部对不同推荐策略的结果进行综合，我们认为这样的早期综合能够得到比较符合用户偏好的特征，</span><a href='../sentence_detail/659.htm' target='right' class='orange' >因此我们主要考察这种综合设计方法，如图4.1所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">239</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 4.1:</span><span class='green'>基于用户长期、中期和即时行为的综合音乐推荐方法框架</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">240</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>考虑到用户的未来行为受到用户长期行为、中期行为和即时行为的共同影响，我们从这三类算法中各</span><span class='green'>选择一种预测出用户可能收听的下一首歌曲在 K个隐含主题上的概率分布。</span><span class='green'>然后，我们使用一定的综合策略将这三个中间概率分布加以综合以得到最终的目标概率分布。</span><span class='green'>在此基础上，我们计算曲库中所有歌曲对应的概率分布于目标概率分布的相似度并将歌曲按照相似度由大到小排列。</span><a href='../sentence_detail/666.htm' target='right' class='orange' >最后，我们将排名靠前的 N首歌曲推荐给用户。</a><span class='green'>要实现这样一个基于用户长期、中期和即时行为的综合音乐推荐，有两个难点需要解决：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">241</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.如何从基于用户长期行为、中期行为和即时行为的音乐推荐方法中选择带 具体的待综合算法。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">242</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/669.htm' target='right' class='orange' >2.采用何种综合策略对给定的三种音乐推荐方法进行综合。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">243</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.1.1方法选取</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">244</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在需要选择的三种音乐推荐方法中，最容易选择的自然是基于用户中期行为的音乐推荐方法，</span><span class='green'>本文给出的基于多维时间序列分析的音乐推荐方法就是一种基于用户中期行为的音乐推荐，</span><a href='../sentence_detail/673.htm' target='right' class='orange' >而且该方法能够取得比较理想的推荐效果。</a><span class='green'>假设使用基于多维时间序列分析的音乐推荐方法预测得到的用户可能收听的下一首歌曲对应的概率分布为.s^mtsa，如式4.1所示。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">245</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>至于基于用户长期行为的音乐推荐方法的选取，我们选择朴素的全局特征推荐。</span><span class='green'>与基于协同过滤的推荐相比，基于全局特征的音乐推荐实现起来比较简单，而且能够预测得到用户的整体偏好，</span><span class='green'>其得到的结果与本文所给的基于多维时间序列分析的音乐推荐方法一致，方便后续综合。</span><span class='green'>基于全局特征的推荐认为用户长时间的听歌行为在一定程度上能够比较用户内在的音乐偏好，</span><span class='green'>进一步地此类算法认为用户下面可能收听歌曲的特征近似于用户所收听的全部歌曲的平均特征。</span><span class='green'>对于用户集中收听了π + n首歌曲的用户u来说，我们设使用基于全局特征推荐得到的目标概率分布为.s^global，如式4.2所示。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">246</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>其中，目标歌曲在第i个隐含主题上的概率取值如式4.3所示，j表示用户收听的第j首歌曲的索引。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">247</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在选定了基于用户中期行为和长期行为的音乐推荐方法之后，我们需要进一步选取基于用户即时行为的音乐推荐方法。</span><span class='green'>基于用户即时行为的音乐推荐思想比较简单，即认为用户的状态是稳定的，进一步地认为用户可能收听的下一首歌曲与用户当前收听的歌曲具有类似的特征。</span><span class='green'>对于用户集中收听了π + n首歌曲的用户u来说，我们设使用基于即时特征推荐得到的目标概率分布为.s^local，如式4.4所示。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">248</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>其中，目标歌曲在第i个隐含主题上的概率取值如式4.5所示，j表示用户收听的第j首歌曲的索引。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">249</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>4.1.2综合策略</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">250</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在给定了三种类型的音乐推荐方法之后，我们还需要选择合理的综合策略将它们综合起来。</span><span class='green'>加权是一种非常重要的综合思想，其一方面可以将不同的推荐策略综合起来考虑，另一方面能够通过权重调整不同推荐策略的影响和贡献，</span><span class='green'>本文所给出的这种基于用户长期、中期和即时行为的音乐推荐方法正是使用这种思想来完成对用户长期行为推荐、中期行为推荐以及即时行为推荐的综合。</span><span class='green'>在使用三种不同的音乐推荐方法预测得到三种不同的中间概率分布即.s^mtsa、 .</span><span class='green'>s^global和.s^local之后，我们按照如式4.6所示的方法对它们进行综合以得到最终的目标概率分布.s^all。</span>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_6.htm">上一页</a>
<a class="pagelink" href="paper_8.htm">下一页</a>
<a class="pagelink" href="paper_11.htm">尾页</a>
页码：7/11页
]
</div>

</div>

<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2013 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
